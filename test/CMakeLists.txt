set(TESTED_SOURCES
        ../src/backend/output_generator.cpp
        ../src/code_elements/ll_ast/ll_ast_node.cpp
        ../src/code_elements/ll_ast/ll_loop_node.cpp
        ../src/code_elements/ll_ast/ll_instruction_node.cpp
        ../src/code_elements/ll_ast/ll_ast_pragma.cpp
        ../src/code_elements/hl_ast/hl_ast_node.cpp
        ../src/code_elements/hl_ast/hl_definition_node.cpp
        ../src/code_elements/hl_ast/hl_function_def_node.cpp
        ../src/code_elements/hl_ast/hl_expression_node.cpp
        ../src/code_elements/hl_ast/hl_ast_operand.cpp
        ../src/code_elements/hl_ast/hl_function_call_node.cpp
        ../src/code_elements/variable.cpp
        ../src/code_elements/define.cpp
        ../src/passes/ll_ast/ll_pass_manager.cpp
        ../src/passes/ll_ast/loop_implementation_pass.cpp
        ../src/passes/ll_ast/pseudo_instructions_pass.cpp
        ../src/passes/ll_ast/register_allocation_pass.cpp
        ../src/passes/ll_ast/variable_lifetime_mapping.cpp
        ../src/passes/ll_ast/load_intercalation_pass.cpp
        ../src/passes/ll_ast/instruction_counting_pass.cpp
        ../src/passes/hl_ast/hl_pass_manager.cpp
        ../src/passes/hl_ast/function_inlining_pass.cpp
        ../src/passes/hl_ast/normalization_pass.cpp
        ../src/passes/hl_ast/function_elimination_pass.cpp
        ../src/passes/hl_ast/inlined_function_elimination.cpp
        ../src/passes/hl_ast/function_mapping.cpp
        ../src/passes/hl_ast/division_implementation_pass.cpp
        ../src/frontend/variable_map.cpp
        ../src/frontend/define_map.cpp
        ../src/frontend/asm/register_map.cpp
        ../src/frontend/asm/AsmErrorHandling.cpp
        ../src/frontend/asm/asm_language_parser.cpp
        ../src/frontend/asm/AsmTree_visitor.cpp
        ../src/frontend/C/C_language_parser.cpp
        ../src/frontend/C/C_ErrorHandling.cpp
        ../src/frontend/C/C_Tree_visitor.cpp
        ../src/frontend/C/C_pre_processor.cpp
        ../src/fcore_has.cpp
        ../src/fcore_cc.cpp
        )


set(TEST_SOURCES
        Instruction_classes.cpp
        ll_passes.cpp
        end_to_end_asm.cpp
        testing_main.cpp
        end_to_end_C.cpp
        C_preprocessor.cpp
        C_tree_visitor_testing.cpp
        hl_passes.cpp)


add_executable(test_target ${TESTED_SOURCES} ${TEST_SOURCES})

# Locate GTest
find_package(GTest REQUIRED)
include_directories(${GTEST_INCLUDE_DIRS})

# Link runTests with what we want to test and the GTest and pthread library
target_link_libraries(test_target ${GTEST_LIBRARIES} pthread asm_parser_lib)
target_link_libraries(test_target ${GTEST_LIBRARIES} pthread c_parser)

# ASM TESTING FILES
configure_file(asm_files/test_add.s ${CMAKE_CURRENT_BINARY_DIR} COPYONLY)
configure_file(asm_files/test_for.s ${CMAKE_CURRENT_BINARY_DIR} COPYONLY)
configure_file(asm_files/test_global.s ${CMAKE_CURRENT_BINARY_DIR} COPYONLY)
configure_file(asm_files/test_variables.s ${CMAKE_CURRENT_BINARY_DIR} COPYONLY)
configure_file(asm_files/test_branch.s ${CMAKE_CURRENT_BINARY_DIR} COPYONLY)
configure_file(asm_files/test_ldc.s ${CMAKE_CURRENT_BINARY_DIR} COPYONLY)
configure_file(asm_files/register_defs.s ${CMAKE_CURRENT_BINARY_DIR} COPYONLY)

#  C TESTING FILES
configure_file(C_files/test_main_add.c ${CMAKE_CURRENT_BINARY_DIR} COPYONLY)
    # Preprocessor
configure_file(C_files/preprocessor/test_preproc_comments.c ${CMAKE_CURRENT_BINARY_DIR} COPYONLY)
configure_file(C_files/preprocessor/test_preproc_pragmas.c ${CMAKE_CURRENT_BINARY_DIR} COPYONLY)
configure_file(C_files/preprocessor/test_preproc_define.c ${CMAKE_CURRENT_BINARY_DIR} COPYONLY)
configure_file(C_files/preprocessor/test_preproc_include_fail.c ${CMAKE_CURRENT_BINARY_DIR} COPYONLY)
configure_file(C_files/preprocessor/test_preproc_include.c ${CMAKE_CURRENT_BINARY_DIR} COPYONLY)
configure_file(C_files/preprocessor/include_test.h ${CMAKE_CURRENT_BINARY_DIR} COPYONLY)
    # Tree visitor (ANTLR <-> AST)
configure_file(C_files/tree_visitor/test_unary_expressions.c ${CMAKE_CURRENT_BINARY_DIR} COPYONLY)
configure_file(C_files/tree_visitor/test_multiplicative_expressions.c ${CMAKE_CURRENT_BINARY_DIR} COPYONLY)
configure_file(C_files/tree_visitor/test_additive_expressions.c ${CMAKE_CURRENT_BINARY_DIR} COPYONLY)
configure_file(C_files/tree_visitor/test_shift_expressions.c ${CMAKE_CURRENT_BINARY_DIR} COPYONLY)
configure_file(C_files/tree_visitor/test_equality_expressions.c ${CMAKE_CURRENT_BINARY_DIR} COPYONLY)
configure_file(C_files/tree_visitor/test_relational_expressions.c ${CMAKE_CURRENT_BINARY_DIR} COPYONLY)
configure_file(C_files/tree_visitor/test_andb_expressions.c ${CMAKE_CURRENT_BINARY_DIR} COPYONLY)
configure_file(C_files/tree_visitor/test_orb_expressions.c ${CMAKE_CURRENT_BINARY_DIR} COPYONLY)
configure_file(C_files/tree_visitor/test_exorb_expressions.c ${CMAKE_CURRENT_BINARY_DIR} COPYONLY)
configure_file(C_files/tree_visitor/test_orl_expressions.c ${CMAKE_CURRENT_BINARY_DIR} COPYONLY)
configure_file(C_files/tree_visitor/test_andl_expressions.c ${CMAKE_CURRENT_BINARY_DIR} COPYONLY)
configure_file(C_files/tree_visitor/test_assignment_expressions.c ${CMAKE_CURRENT_BINARY_DIR} COPYONLY)
configure_file(C_files/tree_visitor/test_definition.c ${CMAKE_CURRENT_BINARY_DIR} COPYONLY)
configure_file(C_files/tree_visitor/test_function_call.c ${CMAKE_CURRENT_BINARY_DIR} COPYONLY)
configure_file(C_files/tree_visitor/test_return.c ${CMAKE_CURRENT_BINARY_DIR} COPYONLY)
configure_file(C_files/test_main_add.c ${CMAKE_CURRENT_BINARY_DIR} COPYONLY)
#OPTIMIZATION PASSES
configure_file(C_files/test_function_inlining.c ${CMAKE_CURRENT_BINARY_DIR} COPYONLY)
configure_file(C_files/test_normalization.c ${CMAKE_CURRENT_BINARY_DIR} COPYONLY)
